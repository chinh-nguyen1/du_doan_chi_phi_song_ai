# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kL0hbaep1f-JUU9qUMd8D986HCQDO9xw
"""

import pandas as pd
import numpy as np
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Embedding, LSTM, Dense
from tensorflow.keras.preprocessing.text import Tokenizer
from tensorflow.keras.preprocessing.sequence import pad_sequences
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import MinMaxScaler
import os

# Bước 1: Đọc dữ liệu
df = pd.read_csv("data/chi_phi_song.csv")

# Bước 2: Gộp văn bản đầu vào
df["text"] = df["tinh_hinh_the_gioi"] + " " + df["khu_vuc"]

# Bước 3: Token hóa văn bản
tokenizer = Tokenizer(num_words=5000, oov_token="<OOV>")
tokenizer.fit_on_texts(df["text"])
X_seq = tokenizer.texts_to_sequences(df["text"])
X_pad = pad_sequences(X_seq, maxlen=20, padding="post")

# Bước 4: Chuẩn hóa nhãn (y)
scaler = MinMaxScaler()
y = scaler.fit_transform(df["chi_phi_song_vnd"].values.reshape(-1, 1))

# Bước 5: Tách train/test
X_train, X_test, y_train, y_test = train_test_split(X_pad, y, test_size=0.2, random_state=42)

# Bước 6: Xây mô hình LSTM
model = Sequential([
    Embedding(input_dim=5000, output_dim=64, input_length=20),
    LSTM(128, activation='tanh'),
    Dense(1)
])

model.compile(optimizer='adam', loss='mse', metrics=['mae'])
model.summary()

# Bước 7: Huấn luyện
history = model.fit(X_train, y_train, epochs=100, batch_size=4, validation_split=0.2)

# Bước 8: Đánh giá
loss, mae = model.evaluate(X_test, y_test)
print(f"Test MAE: {mae:.2f}")

# Bước 9: Lưu mô hình & tokenizer
os.makedirs("model", exist_ok=True)
model.save("model/lstm_model.h5")
import pickle
with open("model/tokenizer.pkl", "wb") as f:
    pickle.dump(tokenizer, f)
with open("model/scaler.pkl", "wb") as f:
    pickle.dump(scaler, f)